{
  "$schema": "https://rimcorearm.blob.core.windows.net/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for Resource names"
      }
    },
    "uniqueNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for globally unique names"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "metadata": {
        "description": "Address Prefix for the Virtual Network"
      }
    },
    "vnetSubnetAddressPrefix": {
      "type": "string",
      "metadata": {
        "description": "Address Prefix for the Virtual Network Subnet"
      }
    },
    "platform": {
      "type": "string",
      "allowedValues": [
          "windows",
          "linux"
      ],
      "metadata": {
          "description": "Operating system to deploy"
      }
    },
    "computerName": {
      "type": "string",
      "metadata": {
        "description": "Name of the computer"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Administrator username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password"
      }
    }
  },
  "variables": {
    "vmDiagnosticsStorageAccountName": "[concat(parameters('uniqueNamePrefix'), toLower(replace(parameters('resourceNamePrefix'), '-', '')), 'diagstr')]",
    "publicIPAddressName": "[concat(parameters('resourceNamePrefix'), '-pip')]",
    "domainNameLabelPrefix": "[concat(parameters('uniqueNamePrefix'), '-', parameters('resourceNamePrefix'))]",    
    "vnetName": "[concat(parameters('resourceNamePrefix'), '-vnet')]",
    "vnetSubnetName": "[concat(parameters('resourceNamePrefix'), '-default')]",
    "nsgName": "[concat(parameters('resourceNamePrefix'), '-nsg')]",
    "nicName": "[concat(parameters('resourceNamePrefix'), '-nic')]",
    "vmName": "[concat(parameters('resourceNamePrefix'), '-vm')]",
    "windowsOffer": "WindowsServer",
    "windowsSku": "2016-Datacenter",
    "windowsPublisher": "MicrosoftWindowsServer",
    "linuxOffer": "UbuntuServer",
    "linuxSku": "16.04.0-LTS",
    "linuxPublisher": "Canonical",
    "scheduleName": "[concat('shutdown-computevm-', variables('vmName'))]"
  },
  "resources": [
    {
      "comments": "Create a Storage Account for VM diagnostics",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2017-06-01",
      "name": "[variables('vmDiagnosticsStorageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage"
    },
    {
      "comments": "Create a Public IP Address",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2017-06-01",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('domainNameLabelPrefix')]"
        }
      }
    },
    {
      "comments": "Create a Virtual Network",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2017-06-01",
      "name": "[variables('vnetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vnetSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('vnetSubnetAddressPrefix')]"
            }
          }
        ]
      }
    },
    {
      "comments": "Create a Network Security Group",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2017-10-01",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowRDPInBound",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389",
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowHttpHttpsInBound",
            "properties": {
              "priority": 1100,
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRanges": [
                "80",
                "443"
              ],
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound"
            }
          }
        ]
      }
    }, 
    {
      "comments": "Create a Network Interface",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2017-06-01",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('vnetSubnetName'))]"         
              }
            }
          }
        ],
        "networkSecurityGroup": { 
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]" 
        }     
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2017-03-30",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('vmDiagnosticsStorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D2_v3"
        },
        "osProfile": {
          "computerName": "[parameters('computerName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[if(equals(parameters('platform'), 'windows'), variables('windowsPublisher'), variables('linuxPublisher'))]",
            "offer": "[if(equals(parameters('platform'), 'windows'), variables('windowsOffer'), variables('linuxOffer'))]",
            "version": "latest",
            "sku": "[if(equals(parameters('platform'), 'windows'), variables('windowsSku'), variables('linuxSku'))]"
          },
          "osDisk": {
            "name": "[concat(variables('vmName'), '-osdisk')]",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(variables('vmName'), '-datadisk1')]",
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('vmDiagnosticsStorageAccountName'))).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "comments": "Create an auto-shutdown schedule",
      "type": "Microsoft.DevTestLab/schedules",
      "name": "[variables('scheduleName')]",
      "apiVersion": "2016-05-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "status": "Enabled",
        "taskType": "ComputeVmShutdownTask",
        "dailyRecurrence": {
          "time": "1900"
        },
        "timeZoneId": "Eastern Standard Time",
        "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
      }
    }
  ],
  "outputs": {
  }
}
