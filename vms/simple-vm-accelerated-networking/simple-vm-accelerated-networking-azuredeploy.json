{
  "$schema": "https://rimcorearm.blob.core.windows.net/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmDiagnosticsStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the VM diagnostics Storage Account"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Public IP Address"
      }
    },
    "domainNameLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for the domain name label"
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Virtual Network"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "metadata": {
        "description": "Address Prefix for the Virtual Network"
      }
    },
    "vnetSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Virtual Network Subnet"
      }
    },
    "vnetSubnetAddressPrefix": {
      "type": "string",
      "metadata": {
        "description": "Address Prefix for the Virtual Network Subnet"
      }
    },
    "nsgName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Network Security Group"
      }
    },
    "nicName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Network Interface"
      }
    },
    "vmSize": {
      "type": "string",
      "allowedValues": [
        
      ],
      "metadata": {
        "description": "Size of the Virtual Machine"
      }
    },
    "platform": {
      "type": "string",
      "allowedValues": [
        "windows",
        "linux"
      ],
      "metadata": {
        "description": "Operating system to deploy"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Virtual Machine"
      }
    },
    "computerName": {
      "type": "string",
      "metadata": {
        "description": "Name of the computer"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Administrator username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password"
      }
    }
  },
  "variables": {
    "uniqueSuffix": "[uniqueString(resourceGroup().id)]",
    "windowsOffer": "WindowsServer",
    "windowsSku": "2016-Datacenter",
    "windowsPublisher": "MicrosoftWindowsServer",
    "linuxOffer": "UbuntuServer",
    "linuxSku": "16.04.0-LTS",
    "linuxPublisher": "Canonical",
    "scheduleName": "[concat('shutdown-computevm-', parameters('vmName'))]",
    "vmSizesDv2": ["Standard_D3_v2", "Standard_D4_v2", "Standard_D5_v2", "Standard_D12_v2", "Standard_D13_v2", "Standard_D14_v2", "Standard_D15_v2"],
    "vmSizesDv2Promo": ["Standard_D3_v2_Promo", "Standard_D4_v2_Promo", "Standard_D5_v2_Promo", "Standard_D12_v2_Promo", "Standard_D13_v2_Promo", "Standard_D14_v2_Promo", "Standard_D15_v2_Promo"],
    "vmSizesDSv2": ["Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2", "Standard_DS12_v2", "Standard_DS13_v2", "Standard_DS13-4_v2", "Standard_DS14_v2", "Standard_DS14-8_v2", "Standard_DS14-4_v2"],
    "vmSizesDSv2Promo": ["Standard_DS3_v2_Promo", "Standard_DS4_v2_Promo", "Standard_DS5_v2_Promo", "Standard_DS12_v2_Promo", "Standard_DS13_v2_Promo", "Standard_DS14_v2_Promo", "Standard_DS13-4_v2_Promo", "Standard_DS14-4_v2_Promo", "Standard_DS14-8_v2_Promo", "Standard_DS15_v2_Promo"],
    "vmSizesDv3": ["Standard_D8_v3", "Standard_D16_v3", "Standard_D32_v3", "Standard_D40_v3", "Standard_D64_v3"],
    "vmSizesDsv3": ["Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3", "Standard_D32-8s_v3", "Standard_D32-16s_v3", "Standard_D40s_v3", "Standard_D64s_v3", "Standard_D64-16s_v3", "Standard_D64-32s_v3"],
    "vmSizesEv3": ["Standard_E8_v3", "Standard_E16_v3", "Standard_E32_v3", "Standard_E32-16_v3", "Standard_E64_v3"],
    "vmSizesEsv3": ["Standard_E8s_v3", "Standard_E16s_v3", "Standard_E32s_v3", "Standard_E32-16s_v3", "Standard_E64s_v3", "Standard_E64-16s_v3", "Standard_E64-32s_v3"],
    "vmSizesF": ["Standard_F4", "Standard_F8", "Standard_F16"],
    "vmSizesFs": ["Standard_F4s", "Standard_F8s", "Standard_F16s"],
    "vmSizesFsv2": ["Standard_F8s_v2", "Standard_F16s_v2", "Standard_F32s_v2", "Standard_F64s_v2", "Standard_F72s_v2"],
    "vmSizesLs": ["Standard_L8s_v2", "Standard_L16s_v2", "Standard_L32s_v2", "Standard_L64s_v2", "Standard_L96s_v2"],
    "vmSizesMs": ["Standard_M64s", "Standard_M64ms", "Standard_M64-16ms", "Standard_M64-32ms", "Standard_M128s", "Standard_M128ms", "Standard_M128-32ms", "Standard_M128-64ms"],
    "vmSizesNCsv2": ["Standard_NC6s_v2", "Standard_NC12s_v2", "Standard_NC24s_v2", "Standard_NC24rs_v2"],
    "vmSizesNCsv3": ["Standard_NC6s_v3", "Standard_NC12s_v3", "Standard_NC24s_v3", "Standard_NC24rs_v3"],
    "vmSizesNDs": ["Standard_ND6s", "Standard_ND12s", "Standard_ND24s", "Standard_ND24rs"],  
    "vmSizes": "[concat(variables('vmSizesDv2'), variables('vmSizesDv2Promo'), variables('vmSizesDSv2'), variables('vmSizesDSv2Promo'), variables('vmSizesDv3'), variables('vmSizesDsv3'), variables('vmSizesEv3'), variables('vmSizesEsv3'), variables('vmSizesF'), variables('vmSizesFs'), variables('vmSizesFsv2'), variables('vmSizesLs'), variables('vmSizesMs'), variables('vmSizesNCsv2'), variables('vmSizesNCsv3'), variables('vmSizesNDs'))]",
    "useAcceleratedNetworking": "[contains(variables('vmSizes'), parameters('vmSize'))]"
  },
  "resources": [
    {
      "comments": "Create a Storage Account for VM diagnostics",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2017-06-01",
      "name": "[toLower(concat(parameters('vmDiagnosticsStorageAccountName'), variables('uniqueSuffix')))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage"
    },
    {
      "comments": "Create a Public IP Address",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2017-06-01",
      "name": "[parameters('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('domainNameLabelPrefix'), variables('uniqueSuffix'))]"
        }
      }
    },
    {
      "comments": "Create a Virtual Network",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2017-06-01",
      "name": "[parameters('vnetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('vnetSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('vnetSubnetAddressPrefix')]"
            }
          }
        ]
      }
    },
    {
      "comments": "Create a Network Security Group",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2017-10-01",
      "name": "[parameters('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowRDPInBound",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389",
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowHttpHttpsInBound",
            "properties": {
              "priority": 1100,
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRanges": [
                "80",
                "443"
              ],
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound"
            }
          }
        ]
      }
    }, 
    {
      "comments": "Create a Network Interface",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2017-06-01",
      "name": "[parameters('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups/', parameters('nsgName'))]"
      ],
      "properties": {
        "enableAcceleratedNetworking": "[variables('useAcceleratedNetworking')]",
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('vnetSubnetName'))]"         
              }
            }
          }
        ],
        "networkSecurityGroup": { 
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]" 
        }     
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2017-03-30",
      "name": "[parameters('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', toLower(concat(parameters('vmDiagnosticsStorageAccountName'), variables('uniqueSuffix'))))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', parameters('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('computerName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[if(equals(parameters('platform'), 'windows'), variables('windowsPublisher'), variables('linuxPublisher'))]",
            "offer": "[if(equals(parameters('platform'), 'windows'), variables('windowsOffer'), variables('linuxOffer'))]",
            "version": "latest",
            "sku": "[if(equals(parameters('platform'), 'windows'), variables('windowsSku'), variables('linuxSku'))]"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'), '-osdisk')]",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(parameters('vmName'), '-datadisk1')]",
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', toLower(concat(parameters('vmDiagnosticsStorageAccountName'), variables('uniqueSuffix'))))).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "comments": "Create an auto-shutdown schedule",
      "type": "Microsoft.DevTestLab/schedules",
      "name": "[variables('scheduleName')]",
      "apiVersion": "2016-05-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "status": "Enabled",
        "taskType": "ComputeVmShutdownTask",
        "dailyRecurrence": {
          "time": "1900"
        },
        "timeZoneId": "Eastern Standard Time",
        "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      }
    }
  ],
  "outputs": {
  }
}
